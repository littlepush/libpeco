DEFINES = --std=c++11 -pthread -Werror -DVERSION="0.0.1" -Wall -fPIC -fexceptions -O3 -DRELEASE=1 #-g -DDEBUG=1 

ifeq '$(findstring ;,$(PATH))' ';'
    detected_OS := Windows
else
    detected_OS := $(shell uname 2>/dev/null || echo Unknown)
    detected_OS := $(patsubst CYGWIN%,Cygwin,$(detected_OS))
    detected_OS := $(patsubst MSYS%,MSYS,$(detected_OS))
    detected_OS := $(patsubst MINGW%,MSYS,$(detected_OS))
endif

ifeq ($(detected_OS),Darwin)
	CC = clang++
	LIB_EXT = dylib
	INSTALL_INC_ROOT = /usr/local/include/pe
	INSTALL_LIB_ROOT = /usr/local/lib
	EX_DEFINES = -I/usr/local/opt/openssl@1.1/include/
	EX_FLAGS = -L/usr/local/opt/openssl@1.1/lib -lssl
else
	CC = g++
	LIB_EXT = so
	INSTALL_INC_ROOT = /usr/include/pe
	INSTALL_LIB_ROOT = /usr/lib64
	EX_DEFINES = 
	EX_FLAGS = -lssl
endif
PECO_UTILS_DEFINES = $(EX_DEFINES)
PECO_UTILS_CFLAGS = -lcrypto -lz $(EX_FLAGS)
PECO_UTILS_CPP_FILES = ./stringutil.cpp ./hex_dump.cpp ./argparser.cpp ./jsoncpp.cpp ./sysinfo.cpp ./gzip.cpp ./filemgr.cpp
PECO_UTILS_OBJ_FILES = $(PECO_UTILS_CPP_FILES:.cpp=.o)

all : libutil

%.o : %.cpp
	$(CC) $(PECO_UTILS_DEFINES) $(DEFINES) -c $< -o $@

libutil : $(PECO_UTILS_OBJ_FILES)
	$(CC) -shared -o libpeutils.$(LIB_EXT) $^ $(PECO_UTILS_CFLAGS)

install : 
	@mkdir -p $(INSTALL_INC_ROOT)/utils/
	@cp -vf *.h *.hpp $(INSTALL_INC_ROOT)/utils/
	@cp -rvf json $(INSTALL_INC_ROOT)/utils/
	@cp -vf libpeutils.$(LIB_EXT) $(INSTALL_LIB_ROOT)/
uninstall : 
	@rm -vrf $(INSTALL_INC_ROOT)/utils/
	@rm -vf $(INSTALL_LIB_ROOT)/libpeutils.$(LIB_EXT)
	
clean: 
	@rm -vf *.o
	@rm -vf *.$(LIB_EXT)

